version: '3.9'

services:
  frontend:
    container_name: frontend
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${PORT_FRONT}:4200"
    environment:
      - API_URL=${API_URL}
    volumes:
      - ./frontend:/app

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${PORT_BACK}:3000"
    environment:
     - POSTGRES_HOST=${POSTGRES_HOST:-db}
     - POSTGRES_PORT=${POSTGRES_PORT:-5432}
     - POSTGRES_USER=${POSTGRES_USER:-user}
     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
     - POSTGRES_DB=${POSTGRES_DB:-teddy_db}
     - REDIS_HOST=${REDIS_HOST:-redis}
     - REDIS_PORT=${REDIS_PORT:-6379}
    depends_on:
      - teddy_db
      - redis
    volumes:
      - .:/app/

  teddy_db:
    image: postgres:latest
    container_name: teddy_db
    environment:
     - POSTGRES_USER=${POSTGRES_USER:-user}
     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
     - POSTGRES_DB=${POSTGRES_DB:-teddy_db}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

volumes:
  db-data:
  redis-data: